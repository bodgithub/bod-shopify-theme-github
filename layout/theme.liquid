<!doctype html>
{%- capture dir -%}
	{%- case request.locale.iso_code -%}
	  {%- when 'ae' or 'ar' or 'arc' or 'bcc' or 'bqi' or 'ckb' or 'dv' or 'fa' or 'glk' or 'ha' or 'he' or 'kwh' or 'ks' or 'ku' or 'mzn' or 'nqo' or 'pnb' or 'ps' or 'sd' or 'ug' or 'ur' or 'yi' -%}
	    rtl
	  {%- else -%}
	    ltr
	{%- endcase -%}
{%- endcapture -%}
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ dir }}">
<head>
	   <script src="https://cdn.rechargeapps.com/assets/v2/recharge.js"></script>

  <meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5, viewport-fit=cover">
	<meta name="theme-color" content="{{ settings.color_body_bg }}">
	<link rel="canonical" href="{{ canonical_url }}">
	<link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <link rel="stylesheet" href="https://use.typekit.net/sjq1yng.css">
  <meta name="facebook-domain-verification" content="tl2op5gh4xlxtpkwy4wcyalujhb718" />

  
	{% render 'head-preload' %}

	{% if settings.favicon != blank -%}
		<link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
	{%- endif %}

  <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-5VSHSRQ');</script>
<!-- End Google Tag Manager -->
  
	<title>
	{{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
	</title>

	{% if page_description %}
	<meta name="description" content="{{ page_description | escape }}">
	{% endif %}

	{%- unless settings.heading_font.system? and settings.body_font.system? -%}
		<link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
	{%- endunless -%}

	{% render 'social-meta-tags' %}

	{{ 'app.css' | asset_url | stylesheet_tag }}
	{{ 'product-grid.css' | asset_url | stylesheet_tag }}

	{% render 'head-variables' %}

	<script>
		window.theme = window.theme || {};
		theme = {
			settings: {
				money_with_currency_format: {{- shop.money_format | json -}},
				cart_drawer: {{- settings.cart_drawer -}}
			},
			routes: {
				root_url: '{{ routes.root_url }}',
				cart_url: '{{ routes.cart_url }}',
				cart_add_url: '{{ routes.cart_add_url }}',
				search_url: '{{ routes.search_url }}',
				cart_change_url: '{{ routes.cart_change_url }}',
				cart_update_url: '{{ routes.cart_update_url }}',
				predictive_search_url: '{{ routes.predictive_search_url }}',
			},
			variantStrings: {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        preOrder: `{{ 'products.product.pre_order' | t }}`,
      },
			strings: {
				requiresTerms: `{{ 'sections.cart.terms_confirm' | t }}`,
				shippingEstimatorNoResults: `{{ 'sections.cart.shipping_estimator.no_results' | t }}`,
				shippingEstimatorOneResult: `{{ 'sections.cart.shipping_estimator.one_result' | t }}`,
				shippingEstimatorMultipleResults: `{{ 'sections.cart.shipping_estimator.multiple_results' | t }}`,
				shippingEstimatorError: `{{ 'sections.cart.shipping_estimator.error' | t }}`
			}
		};
	</script>
	{{ content_for_header }} <!-- Header hook for plugins -->

	<script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');</script>
	{{ settings.custom_html_head }}

<script type='text/javascript'>
  window.smartlook||(function(d) {
    var o=smartlook=function(){ o.api.push(arguments)},h=d.getElementsByTagName('head')[0];
    var c=d.createElement('script');o.api=new Array();c.async=true;c.type='text/javascript';
    c.charset='utf-8';c.src='https://web-sdk.smartlook.com/recorder.js';h.appendChild(c);
    })(document);
    smartlook('init', '1165b594f0275925da719f927c7bc8068dcdff2b', { region: 'eu' });
</script>
  
  <script>
    (function(h,t,p,r,o,b,e){h['HitprobeObject']=o;h[o]=h[o]||function(){
    (h[o].q=h[o].q||[]).push(arguments)},h[o].l=1*new Date();b=t.createElement(p),
    e=t.getElementsByTagName(p)[0];b.async=1;b.src=r;e.parentNode.insertBefore(b,e)
    })(window,document,'script','https://app.hitprobe.com/p/v1.js','hp');
    hp('init', {siteKey: 'ac87b9c7-1e98-43f0-b6de-d0936f0e3047'});
</script>

</head>
<body class="animations-{{ settings.animations }} button-uppercase-{{ settings.button_uppercase }} navigation-uppercase-{{ settings.navigation_uppercase }} product-card-spacing-{{ settings.product_card_spacing }} article-card-spacing-{{ settings.article_card_spacing }} {% if customer %} customer-logged-in{% endif %} template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }} template-{{ template | replace: '.', '-' | handle }}">

  
  <!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5VSHSRQ"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
  
  <a class="screen-reader-shortcut" href="#main-content">{{ 'accessibility.skip_to_text' | t }}</a>
	<div id="wrapper">
		<div class="header--sticky"></div>
		{% sections 'header-group' %}
		<div role="main" id="main-content">
			{{ content_for_layout }}
		</div>
		{% sections 'footer-group' %}
		{% render 'cart-drawer' %}
		{% render 'product-drawer' %}
		{% render 'search-drawer' %}
		<div class="click-capture"></div>
		<div class="click-capture--product"></div>
	</div>

	{{ 'vendor.min.js' | asset_url | script_tag }}
	{% if settings.animations %}
		{{ 'animations.min.js' | asset_url | script_tag }}
		<script>
			gsap.defaults({
				ease: Power4.easeOut
			});
			gsap.config({
		    nullTargetWarn: false
		  });
			gsap.registerPlugin(ScrollTrigger, DrawSVGPlugin);
		</script>
	{% endif %}
	{{ 'product.js' | asset_url | script_tag }}
	{{ 'slideshow.js' | asset_url | script_tag }}
	{{ 'app.js' | asset_url | script_tag }}
	<script type="module" src="{{ 'scroll-shadow.js' | asset_url }}" defer="defer"></script>
	<script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
	{%- if settings.free_shipping -%}
		{{ 'free-shipping.js' | asset_url | script_tag }}
		{{ 'free-shipping.css' | asset_url | stylesheet_tag }}
	{%- endif -%}
	{%- if request.design_mode -%}
		{{ 'theme-editor.js' | asset_url | script_tag }}
	{%- endif -%}
	{% render 'back-to-top' %}
	{%- if settings.preload_links -%}
		{%- unless request.design_mode -%}
		<script type="module" src="{{ 'instant-page.js' | asset_url }}" defer="defer"></script>
		{%- endunless -%}
	{%- endif -%}

  <!-- Custom Cursor JavaScript START --> 
	<script>
  document.addEventListener('DOMContentLoaded', function() {
      // Create the custom cursor element
      const cursor = document.createElement('div');
      cursor.classList.add('custom-cursor');
      document.body.appendChild(cursor);

      // Handle mouse movement
      document.addEventListener('mousemove', function(e) {
          cursor.style.left = `${e.pageX - 40}px`; // Adjust position (width / 2)
          cursor.style.top = `${e.pageY - 40}px`;  // Adjust position (height / 2)
      });

      // Handle product card hover
      const productCards = document.querySelectorAll('.product-card'); // Select all product cards
      productCards.forEach(card => {
          card.addEventListener('mouseenter', function() {
              const supply = this.getAttribute('data-supply'); // Get the custom supply metafield
              cursor.innerHTML = supply ? `<i>${supply}</i>` : '<i>Shop Now</i>'; // Show italicized supply value or fallback
              cursor.style.transform = 'scale(1)'; // Show cursor
          });

          card.addEventListener('mouseleave', function() {
              cursor.style.transform = 'scale(0)'; // Hide cursor
          });
      });
  });
</script>


  <script>
  document.addEventListener('DOMContentLoaded', function() {
      // Note: This script ensures that alt text and title tooltips are suppressed for product card images.

      // Select all images within product cards
      const productImages = document.querySelectorAll('.product-card img');

      productImages.forEach(img => {
          // Remove the title attribute to prevent tooltips from showing
          img.removeAttribute('title');

          // Set a title attribute to an empty string to fully suppress any title tooltip
          img.setAttribute('title', '');

          // Optional: Set alt attribute to an empty string to stop browsers from showing alt tooltips on hover
          img.setAttribute('alt', img.getAttribute('alt') || ''); // Ensures alt isn't removed for SEO, just overridden
      });
  });
</script>


	<!-- Custom Cursor JavaScript END -->


<!-- Custom Cursor2 JavaScript START -->
  <script>
  document.addEventListener('DOMContentLoaded', function() {
      // Create the custom cursor2 element
      const cursor2 = document.createElement('div');
      cursor2.classList.add('custom-cursor2');
      document.body.appendChild(cursor2);

      // Handle mouse movement
      document.addEventListener('mousemove', function(e) {
          cursor2.style.left = `${e.pageX - 40}px`; // Center horizontally
          cursor2.style.top = `${e.pageY - 40}px`; // Center vertically
        
      });

      // Handle hover over elements with data-tooltip
      const tooltipElements = document.querySelectorAll('[data-tooltip]'); // Select elements with the data-tooltip attribute

      tooltipElements.forEach(element => {
          element.addEventListener('mouseenter', function() {
              const tooltipText = this.getAttribute('data-tooltip'); // Get the tooltip text from the data-tooltip attribute
              if (tooltipText) {
                  cursor2.textContent = tooltipText; // Set the tooltip text in cursor2
                  adjustCursorSize(cursor2); // Adjust the size based on content
                  cursor2.style.transform = 'scale(1)'; // Show cursor2 with tooltip
              }
          });

          element.addEventListener('mouseleave', function() {
              cursor2.style.transform = 'scale(0)'; // Hide cursor2 when not hovering
          });
      });

      // Function to adjust the cursor size based on its content
      function adjustCursorSize(cursor) {
          const computedStyle = window.getComputedStyle(cursor);
          const padding = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);
          
          // Create a temporary element to measure content size
          const tempDiv = document.createElement('div');
          tempDiv.style.visibility = 'hidden';
          tempDiv.style.position = 'absolute';
          tempDiv.style.width = 'auto';
          tempDiv.style.height = 'auto';
          tempDiv.style.whiteSpace = 'nowrap';
          tempDiv.textContent = cursor.textContent;

          document.body.appendChild(tempDiv);
          
          const contentWidth = tempDiv.offsetWidth + padding;
          const contentHeight = tempDiv.offsetHeight + padding;

          // Calculate the size to keep 1:1 ratio
          const newSize = Math.max(contentWidth, contentHeight);

          // Set new size
          cursor.style.width = `${newSize}px`;
          cursor.style.height = `${newSize}px`;

          document.body.removeChild(tempDiv); // Clean up
      }
  });
</script>


  	<!-- Custom Cursor2 JavaScript END -->


<!-- Custom Cursor3 JavaScript START -->
  <script>
  document.addEventListener('DOMContentLoaded', function() {
      // Create the custom cursor3 element
      const cursor3 = document.createElement('div');
      cursor3.classList.add('custom-cursor3');
      document.body.appendChild(cursor3);

      // Handle mouse movement
      document.addEventListener('mousemove', function(e) {
          cursor3.style.left = `${e.pageX - 75}px`; // Center horizontally
          cursor3.style.top = `${e.pageY - 75}px`; // Center vertically
        
      });

      // Handle hover over elements with data-tooltip3
      const tooltipElements = document.querySelectorAll('[data-tooltip3]'); // Select elements with the data-tooltip3 attribute

      tooltipElements.forEach(element => {
          element.addEventListener('mouseenter', function() {
              const tooltipText = this.getAttribute('data-tooltip3'); // Get the tooltip text from the data-tooltip3 attribute
              if (tooltipText) {
                  cursor3.textContent = tooltipText; // Set the tooltip text in cursor3
                  adjustCursorSize(cursor3); // Adjust the size based on content
                  cursor3.style.transform = 'scale(1)'; // Show cursor3 with tooltip
              }
          });

          element.addEventListener('mouseleave', function() {
              cursor3.style.transform = 'scale(0)'; // Hide cursor3 when not hovering
          });
      });

      // Function to adjust the cursor size based on its content
      function adjustCursorSize(cursor) {
          const computedStyle = window.getComputedStyle(cursor);
          const padding = parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);
          
          // Create a temporary element to measure content size
          const tempDiv = document.createElement('div');
          tempDiv.style.visibility = 'hidden';
          tempDiv.style.position = 'absolute';
          tempDiv.style.width = 'auto';
          tempDiv.style.height = 'auto';
          tempDiv.style.whiteSpace = 'nowrap';
          tempDiv.textContent = cursor.textContent;

          document.body.appendChild(tempDiv);
          
          const contentWidth = tempDiv.offsetWidth + padding;
          const contentHeight = tempDiv.offsetHeight + padding;

          // Calculate the size to keep 1:1 ratio
          const newSize = Math.max(contentWidth, contentHeight);

          // Set new size
          cursor.style.width = `${newSize}px`;
          cursor.style.height = `${newSize}px`;

          document.body.removeChild(tempDiv); // Clean up
      }
  });
</script>


  	<!-- Custom Cursor3 JavaScript END -->

    	<!-- Upgrade to Subscription Button -->


<script>
  function refreshCartDrawer() {
    fetch('/cart?section_id=cart-drawer&_' + Date.now())
      .then(res => res.text())
      .then(html => {
        const tmp = document.createElement('div');
        tmp.innerHTML = html;
        const newContent = tmp.querySelector('#Cart-Drawer .side-panel-content');
        document.querySelector('#Cart-Drawer .side-panel-content').innerHTML = newContent.innerHTML;
        bindSubscriptionButtons();
      })
      .catch(console.error);
  }

  function swapToSubscription(btn) {
    const lineKey   = btn.dataset.lineItemKey;
    const variantId = btn.dataset.variantId;
    const planId    = btn.dataset.planId;
    const count     = btn.dataset.intervalUnitCount;
    const unit      = btn.dataset.intervalUnit;

    // 1) remove the one‑off
    fetch('/cart/change.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: lineKey, quantity: 0 })
    })
    // 2) add it back as a subscription
    .then(() => fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        id: parseInt(variantId, 10),
        quantity: 1,
        properties: {
          "_recharge_selling_plan_id": planId,
          "_recharge_interval_unit_count": count,
          "_recharge_interval_unit": unit
        }
      })
    }))
    // 3) refresh just the drawer
    .then(refreshCartDrawer)
    .catch(console.error);
  }

  function bindSubscriptionButtons() {
    document.querySelectorAll('.js-upgrade-to-sub').forEach(btn => {
      if (btn._bound) return;
      btn._bound = true;
      btn.addEventListener('click', e => {
        e.preventDefault();
        swapToSubscription(btn);
      });
    });
  }

  document.addEventListener('DOMContentLoaded', bindSubscriptionButtons);
  document.addEventListener('CartDrawerOpen', bindSubscriptionButtons);
</script>



  
</body>
</html>
