{%- liquid
  assign article_show_sharing = section.settings.article_show_sharing
  assign article_show_nav = section.settings.article_show_nav

  assign article_card_shadow = settings.article_card_shadow
  assign article_card_shadow_class = 'has-shadow--' | append: article_card_shadow
-%}

<style>
  .mobile-only {
    display: none; /* Hide by default */
  }

  @media (max-width: 900px) {
    .mobile-only {
      display: block; /* Show only on screens below 900px */
    }
  }
</style>


{{ 'article.css' | asset_url | stylesheet_tag }}
{%- render 'article-navigation', article_show_nav: article_show_nav, article_show_sharing: article_show_sharing -%}
<div class="blog-post-detail--wrapper section-spacing-bottom">
  <div class="row">

    <div class="mobile-only-TOC">
      {% if block.type == 'title' %}
          {%- liquid
            assign has_image = false
            if article.image
              assign has_image = true
            endif

            assign article_card_border = settings.article_card_border
          -%}
          <div class="post-title-wrapper mobile post-title-wrapper--has-img-{{- has_image }} post-title-wrapper--border-{{ article_card_border }}" id="post-title-wrapper">
            <div class="post-title">
              {% if section.settings.article_show_date or section.settings.article_show_author %}
              <div class="post-meta-wrapper">
                {%- if section.settings.article_show_date -%}
                <aside class="post-meta">
                  {{- article.published_at | time_tag: '%b %d, %Y' -}}
                </aside>
                {%- endif -%}
                {%- if section.settings.article_show_author -%}
                <aside class="post-author">{{- article.author -}}</aside>
                {% endif %}
              </div>
              {% endif %}
              <h1 class="entry-title h1">{{ article.title }}</h1>
              {%- liquid
                if article_show_sharing
                  render 'social-share', share_label: true, share_title: article.title, share_permalink: article.url, share_image: article.featured_image
                endif
              -%}
            </div>
            {%- if article.image -%}
            <div class="featured-image">
              {%- render 'responsive-image', image: article.image, sizes: '345x300,640x550,1280x1100' -%}
            </div>
            {%- endif -%}
          </div>
          {% endif %}
    </div>

<!-- Table of Contents Column -->
<div class="small-3 columns" id="table-of-contents-column">
  <div class="table-of-contents" id="table-of-contents">
    <h3>Contents</h3>
    <ul>
     
    </ul>
  </div>
</div>


    <!-- Blog Content Column -->
    <div class="small-9 columns">

      <article class="blog-post-detail" id="main-article">
        {% for block in section.blocks %}
          {% if block.type == '@app' %}
            <div class="page-content-width">
              {% render block %}
            </div>
          {% endif %}
          {% if block.type == 'title' %}
          {%- liquid
            assign has_image = false
            if article.image
              assign has_image = true
            endif

            assign article_card_border = settings.article_card_border
          -%}
          <div class="post-title-wrapper post-title-wrapper--has-img-{{- has_image }} post-title-wrapper--border-{{ article_card_border }}" id="post-title-wrapper">
            <div class="post-title">
              {% if section.settings.article_show_date or section.settings.article_show_author %}
              <div class="post-meta-wrapper">
                {%- if section.settings.article_show_date -%}
                <aside class="post-meta">
                  {{- article.published_at | time_tag: '%b %d, %Y' -}}
                </aside>
                {%- endif -%}
                {%- if section.settings.article_show_author -%}
                <aside class="post-author">{{- article.author -}}</aside>
                {% endif %}
              </div>
              {% endif %}
              <h1 class="entry-title h1">{{ article.title }}</h1>
              {%- liquid
                if article_show_sharing
                  render 'social-share', share_label: true, share_title: article.title, share_permalink: article.url, share_image: article.featured_image
                endif
              -%}
            </div>
            {%- if article.image -%}
            <div class="featured-image">
              {%- render 'responsive-image', image: article.image, sizes: '345x300,640x550,1280x1100' -%}
            </div>
            {%- endif -%}
          </div>
          {% endif %}
          {% if block.type == 'content' %}

          <!-- Updated Content Processing -->
          <div class="post-content page-content-width rte" {{ block.shopify_attributes }}>
  {% assign updated_content = article.content %}

  <!-- Output the processed content -->
  {{ updated_content }}
</div>
          <!-- End of Updated Content Processing -->

          {% endif %}
          {% if block.type == 'tags' %}
            {%- if article.tags.size > 0 -%}
            <footer class="article-tags page-content-width" {{ block.shopify_attributes }}>
              {% for tag in article.tags %}
                <a href="{{ blog.url | escape }}/tagged/{{ tag | handle }}" class="tag-link">{{ tag }}</a>
              {% endfor %}
            </footer>
            {%- endif -%}
          {% endif %}
          {% if block.type == 'post_navigation' %}
            {%- liquid
              assign current_found = false
              assign done = false

              for a in blog.articles
                if current_found and done == false
                  assign next_article = a
                  assign done = true
                endif
                unless done
                  if a.id == article.id
                    assign current_found = true
                  endif
                endunless
              endfor
            -%}
            {%- if next_article -%}
            <div class="page-content-width">
              <div class="blog-post-detail--continue {{ article_card_shadow_class }} blog-post-detail--continue--border-{{ article_card_border }}">
                <div class="blog-post-detail--continue-content">
                  <span class="blog-post-detail--continue-title">{{ 'blogs.article.continue_reading' | t }}</span>
                  <h5><a href="{{ next_article.url }}" title="{{ next_article.title | escape }}">{{ next_article.title }}</a></h5>
                  {%- assign read_more = 'blogs.article.read_more' | t -%}
                  {%- render 'text-button', url: next_article.url, title: read_more -%}
                </div>
                {%- if next_article.image -%}
                <div class="blog-post-detail--continue-image">
                  <a href="{{ next_article.url }}" title="{{ next_article.title | escape }}">
                    {%- render 'responsive-image', image: next_article.image, sizes: '380x360' -%}
                  </a>
                </div>
                {%- endif -%}
              </div>
            </div>
            {%- endif -%}
          {% endif %}
        {% endfor %}
        <div class="blog-post-detail--end"></div>
      </article>
    </div>
  </div>
</div>
<script type="application/ld+json">
  {{ article | structured_data }}
</script>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Select the blog content container
    const articleContentElement = document.querySelector('.post-content');
    const tocElement = document.querySelector('#table-of-contents ul');

    if (articleContentElement && tocElement) {
      let articleContent = articleContentElement.innerHTML;

      // Function to generate IDs based on the heading content
      function generateId(content) {
        return content
          .toLowerCase() // Convert to lowercase
          .replace(/[^a-z0-9\s]/g, '') // Remove special characters
          .replace(/\s+/g, '-') // Replace spaces with hyphens
          .substring(0, 20); // Truncate to 20 characters
      }

      // Add IDs to H2 and H3 tags
      const updatedContent = articleContent
        .replace(/<h2(.*?)>(.*?)<\/h2>/g, function (match, attributes, content) {
          const id = generateId(content);
          return `<h2 id="${id}"${attributes}>${content}</h2>`;
        })
        .replace(/<h3(.*?)>(.*?)<\/h3>/g, function (match, attributes, content) {
          const id = generateId(content);
          return `<h3 id="${id}"${attributes}>${content}</h3>`;
        });

      // Update the content in the DOM
      articleContentElement.innerHTML = updatedContent;

      // Collect all headings
      const headings = Array.from(articleContentElement.querySelectorAll('h2, h3'));
      const totalHeadings = headings.length;

      // Determine TOC strategy
      const showSubheadings = totalHeadings <= 15;

      // Generate the TOC
      const tocItems = {};
      headings.forEach((heading) => {
        if (heading.tagName.toLowerCase() === 'h2' || (showSubheadings && heading.tagName.toLowerCase() === 'h3')) {
          const id = heading.id;
          const text = heading.textContent.trim();
          const isSubheading = heading.tagName.toLowerCase() === 'h3';

          // Create TOC list item
          const listItem = document.createElement('li');
          if (isSubheading) {
            listItem.classList.add('toc-subheading');
          }

          const anchor = document.createElement('a');
          anchor.href = `#${id}`;
          anchor.textContent = text;

          listItem.appendChild(anchor);
          tocElement.appendChild(listItem);

          // Store reference to the TOC item for later
          tocItems[id] = listItem;
        }
      });

      // Highlight TOC item when section is in view
      const observerOptions = {
        root: null, // Use the viewport as the root
        rootMargin: '0px 0px -50% 0px', // Trigger when the section is halfway in view
        threshold: 0.5, // Trigger when 50% of the section is in view
      };

      const observerCallback = (entries) => {
        entries.forEach((entry) => {
          const id = entry.target.id;
          if (entry.isIntersecting && tocItems[id]) {
            // Highlight the active TOC item
            Object.values(tocItems).forEach((item) => item.classList.remove('active-toc-item'));
            tocItems[id].classList.add('active-toc-item');
          }
        });
      };

      const observer = new IntersectionObserver(observerCallback, observerOptions);

      // Observe each heading
      headings.forEach((heading) => observer.observe(heading));
    }
  });
</script>








{% schema %}
  {
		"name": "Blog post",
		"class": "article-section",
    "settings": [
			{
				"type": "header",
				"content": "Settings"
			},
			{
				"type": "checkbox",
				"id": "article_show_date",
				"label": "Show date",
				"default": true
			},
			{
				"type": "checkbox",
				"id": "article_show_author",
				"label": "Show author",
				"default": true
			},
			{
				"type": "checkbox",
				"id": "article_show_nav",
				"label": "Show sticky information",
				"default": true
			},
			{
				"type": "checkbox",
				"id": "article_show_sharing",
				"label": "Show sharing buttons",
				"default": true
			},
			{
				"type": "paragraph",
				"content": "If you include a link in social media posts, the page’s featured image will be shown as the preview image. [Learn more](https://help.shopify.com/en/manual/online-store/images/showing-social-media-thumbnail-images)."
			},
			{
				"type": "paragraph",
				"content": "A store title and description are included with the preview image. [Learn more](https://help.shopify.com/en/manual/promoting-marketing/seo/adding-keywords#set-a-title-and-description-for-your-online-store)."
			}
    ],
		"blocks": [
			{
	      "type": "@app"
	    },
			{
        "type": "title",
        "name": "Title",
	      "limit": 1
      },
			{
        "type": "post_navigation",
        "name": "Next article",
	      "limit": 1
      },
			{
        "type": "content",
        "name": "Content",
	      "limit": 1
      },
			{
        "type": "tags",
        "name": "Tags",
	      "limit": 1
      }
    ]
  }
{% endschema %}
