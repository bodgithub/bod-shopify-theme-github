{{- 'testimonials.css' | asset_url | stylesheet_tag -}}
{%- liquid
	assign section_heading = section.settings.heading
	assign full_width = section.settings.full_width
	assign font_family = section.settings.font_family
	assign text_size = section.settings.text_size
	assign pagination = section.settings.pagination
	assign autoplay = section.settings.autoplay
	assign color_bg = section.settings.color_bg
 assign color_border_card = section.settings.color_border_card
    assign color_bg_card = section.settings.color_bg_card
	assign color_text = section.settings.color_text
    assign color_text2 = section.settings.color_text2
	assign disable_top_spacing = section.settings.disable_top_spacing
	assign disable_bottom_spacing = section.settings.disable_bottom_spacing

	if autoplay
		assign autoplay = section.settings.autoplay_length | times: 1000
	endif
-%}
<div class="row{% if full_width %} full-width-row-full{% endif %}">
	<div class="small-12 columns">
		<div class="testimonials testimonials--full-width-{{ full_width }} section-spacing-padding{% if disable_top_spacing %} section-spacing--disable-top{% endif %}{% if disable_bottom_spacing %} section-spacing--disable-bottom{% endif %}" style="--color-bg:{{ color_bg }}; --color-body: {{ color_text }}; --color-text:{{ color_text }}; --bg-body-rgb: {{ color_bg.rgb | replace: ' ' , ',' }}">
			{%- if section_heading -%}
			<div class="testimonials--heading">
				<h1>{{ section_heading }}</h1>
			</div>
			{%- endif -%}


          
			<div class="testimonials--inner text-{{ text_size }}">
				<slide-show class="testimonials--carousel carousel static-dots pagination--{{ pagination }}" data-autoplay="{{ autoplay }}" data-dots="true" data-align="center">              
                  {%- for block in section.blocks -%}
						<div class="testimonials--testimonial carousel__slide" {{ block.shopify_attributes }}>
							<div class="testimonials--testimonial-inner">
								{%- if block.settings.stars and block.settings.stars != '' -%}
									<div class="star-rating" style="--star-rating: {{ block.settings.stars }};"></div>
								{%- endif -%}
								<div class="testimonials--testimonial-content">
									<p>{{ block.settings.quote | newline_to_br }}</p>
								</div>
								
							</div>
						</div>
					{%- endfor -%}
					{%- if section.blocks.size > 1 -%}
						{%- if pagination == 'logos' -%}
							<scroll-shadow>
								<ol class="flickity-custom-dots dot-style--{{ pagination }}">
									{%- for block in section.blocks -%}
										<li class="dot" aria-label="{{ forloop.index }}" style="background-color:{{ color_bg_card }}; border:1px solid {{ color_border_card }}">
											{%- liquid
												if block.settings.image != blank
													assign image = block.settings.image
													assign master_width = image.src.width | append: 'x' | append: image.src.height
													assign width = '345x' | append: ',' | append: master_width
													render 'responsive-image', image: image, sizes: width, retina: true
												endif
											-%}
                                          {%- if block.settings.author != empty -%}
								<div class="testimonials--author" style="color:{{ color_text2 }};">
									<div style="padding-bottom:10px;"><strong>{{- block.settings.name -}}</strong></div><div><h6>{{ block.settings.expert-title }}</h6></div>
                      
								</div>
								{%- endif -%}
										</li>
									{%- endfor -%}
								</ol>
							</scroll-shadow>
						{%- endif -%}
					{%- endif -%}
				</slide-show>
			</div>
		</div>
	</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.querySelector('.testimonials--carousel');
  const dotsContainer = document.querySelector('.flickity-custom-dots');
  const dots = document.querySelectorAll('.flickity-custom-dots .dot');
  const slides = document.querySelectorAll('.testimonials--testimonial');

  if (!carousel || slides.length === 0 || !dotsContainer) return;

  // Find the middle index of testimonials
  const middleIndex = Math.floor(slides.length / 2);

  // Initialize Flickity for testimonials
  const flickityInstance = new Flickity(carousel, {
    wrapAround: true, // Enables infinite scrolling
    pageDots: false, // Hide default Flickity dots
    cellAlign: 'center',
    contain: true,
    draggable: true,
    initialIndex: middleIndex, // Start from the middle testimonial
    autoPlay: false // Set this to a number (e.g. 5000) if autoplay is needed
  });

  function updateDotHighlight(selectedIndex) {
    if (!dots.length) return;

    dots.forEach(dot => dot.classList.remove('is-selected'));
    if (dots[selectedIndex]) {
      dots[selectedIndex].classList.add('is-selected');
    }

    // Ensure the active dot is centered in the scrollable container
    const activeDot = dots[selectedIndex];
    if (activeDot) {
      dotsContainer.scrollTo({
        left: activeDot.offsetLeft - dotsContainer.offsetWidth / 2 + activeDot.offsetWidth / 2,
        behavior: 'smooth'
      });
    }
  }

  // Ensure the middle slide is highlighted initially
  flickityInstance.on('ready', function() {
    updateDotHighlight(middleIndex);
  });

  // Update dot highlighting on slide change
  flickityInstance.on('select', function() {
    updateDotHighlight(flickityInstance.selectedIndex);
  });

  // Click event: Clicking a dot scrolls to the correct testimonial
  dots.forEach((dot, index) => {
    dot.addEventListener('click', function() {
      flickityInstance.select(index);
    });
  });

  // Make dots container scrollable with dragging
  let isDown = false;
  let startX;
  let scrollLeft;

  dotsContainer.addEventListener('mousedown', (e) => {
    isDown = true;
    dotsContainer.classList.add('is-dragging');
    startX = e.pageX - dotsContainer.offsetLeft;
    scrollLeft = dotsContainer.scrollLeft;
  });

  dotsContainer.addEventListener('mouseleave', () => {
    isDown = false;
    dotsContainer.classList.remove('is-dragging');
  });

  dotsContainer.addEventListener('mouseup', () => {
    isDown = false;
    dotsContainer.classList.remove('is-dragging');
  });

  dotsContainer.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - dotsContainer.offsetLeft;
    const walk = (x - startX) * 2; // Scroll speed multiplier
    dotsContainer.scrollLeft = scrollLeft - walk;
  });
});





</script>


{% schema %}
  {
    "name": "Expert Testimonials",
		"class": "section-testimonials",
    "settings": [
			{
				"type": "richtext",
				"id": "heading",
				"label": "Heading",
				
			},
			{
        "type": "checkbox",
        "id": "full_width",
        "label": "Make section full width",
        "default": true
      },
      {
        "type": "select",
        "id": "text_size",
        "label": "Text size",
        "default": "medium",
        "options": [
          { "value": "small", "label": "Small" },
          { "value": "medium", "label": "Medium" },
          { "value": "large", "label": "Large" }
        ]
      },
			{
				"type": "select",
				"id": "font_family",
				"options": [
					{
						"value": "body",
						"label": "Body"
					},
					{
						"value": "heading",
						"label": "Heading"
					}
				],
				"default": "heading",
				"label": "Font family"
			},
			{
        "type": "select",
        "id": "pagination",
        "label": "Pagination",
        "default": "dots",
        "options": [
          { "value": "dots", "label": "Dots" },
          { "value": "logos", "label": "Logos" }
        ]
      },
			{
        "type": "checkbox",
        "id": "autoplay",
        "label": "Auto-rotate slides",
        "default": true
      },
			{
				"type": "range",
				"id": "autoplay_length",
				"min": 3,
				"max": 10,
				"step": 1,
				"unit": "s",
				"label": "Change slides every",
				"default": 5
			},
			{
	      "type": "header",
	      "content": "Colors"
	    },
			{
        "type": "color",
        "id": "color_bg",
        "label": "Background",
        "default": "#F5F5F5"
      }, {
        "type": "color",
        "id": "color_bg_card",
        "label": "Card Background",
        "default": "#F5F5F5"
      },
      {
        "type": "color",
        "id": "color_border_card",
        "label": "Card Border",
        "default": "#F5F5F5"
      },
			{
        "type": "color",
        "id": "color_text",
        "label": "Text",
        "default": "#2c2d2e"
      },
      {
        "type": "color",
        "id": "color_text2",
        "label": "Card Text",
        "default": "#2c2d2e"
      },
			{
	      "type": "header",
	      "content": "Spacing"
	    },
			{
				"type": "checkbox",
				"id": "disable_top_spacing",
				"default": false,
				"label": "Remove top spacing"
			},
			{
				"type": "checkbox",
				"id": "disable_bottom_spacing",
				"default": false,
				"label": "Remove bottom spacing"
			}
    ],
    "blocks": [
      {
        "type": "quote",
        "name": "Testimonial",
        "settings": [
					{
						"type": "image_picker",
						"id": "image",
						"label": "Logo"
					},
					{
						"type": "select",
						"id": "stars",
						"options": [
							{ "value": "", "label": "None" },
							{ "value": "3", "label": "3 out of 5" },
							{ "value": "3.5", "label": "3.5 out of 5" },
							{ "value": "4", "label": "4 out of 5" },
							{ "value": "4.5", "label": "4.5 out of 5" },
							{ "value": "5", "label": "5 out of 5" }
						],
						"default": "",
						"label": "Star rating"
					},
          {
            "type": "richtext",
            "id": "quote",
            "label": "Quote",
          },
          {
            "id": "name",
            "type": "text",
            "label": "Name",
						"default": "Expert Name"
          },
          {
            "id": "expert-title",
            "type": "text",
            "label": "Title",
						"default": "Expert Title"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Expert Testimonials",
				"blocks": [
	        {
	          "type": "quote"
	        },
	        {
	          "type": "quote"
	        },
	        {
	          "type": "quote"
	        }
	      ]
      }
    ]
  }
{% endschema %}
